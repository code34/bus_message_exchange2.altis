	/*
	Author: code34 nicolas_boiteux@yahoo.fr
	Copyright (C) 2016-2018 Nicolas BOITEUX

	CLASS OO_BME
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>. 
	*/

	/*
	Function: 
	_bme = "new" call OO_BME;
	Create a new bme object (require to create at same time a handler)
	*/

	/*
	Function : ["remoteCall", ["remotefunction", data, "target", targetid, defaultreturn, timeout]] call _bme;
	@remotefunction is a string declare in clienthandler or serverhandler file
	@parameters of remotefunction
	@targetid clientid of the target or 2 for server
	@defaultreturn : default return, in case of no return of the target
	@timeout: limit of time to wait for the answer of target
	*/

	/*
	Function : ["remoteSpawn", ["remotefunction", data, "target", playerid]] call _bme;
	@remotefunction is a string declare in clienthandler or serverhandler file
	@data paramters of remotefunction
	@target is a string ("client" or "server" or "all") declare the target where the remote function will be exectued
	@playerid (optionnal) is a scalar defined by the player id where the code should be executed
	*/

	How to declare remote functions
	===========================
	You have to declare your remote functions as normal function with global declaration name

	The handler declaration must respect this syntax:

	remotefunction = { code to execute on other side }
	
	You can declare thoses functions directly in your code. 